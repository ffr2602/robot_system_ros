<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot">

    <xacro:property name="path"                 value="robot_system_ros" />

    <xacro:property name="chassis_length"       value="1.004" />
    <xacro:property name="chassis_length_mid"   value="0.6" />
    <xacro:property name="chassis_width"        value="0.484" />
    <xacro:property name="chassis_height_low"   value="0.102" />
    <xacro:property name="chassis_height_top"   value="0.124" />
    <xacro:property name="chassis_height_mid"   value="0.06" />
    <xacro:property name="chassis_mass"         value="1.7" />
    
    <xacro:property name="wheel_radius"         value="0.05" />
    <xacro:property name="wheel_thickness"      value="0.07" />
    <xacro:property name="wheel_mass"           value="0.05" />

    <xacro:property name="wheel_offset_x"       value="${(chassis_length - (0.0795 * 2))/2}" />
    <xacro:property name="wheel_offset_y"       value="${(chassis_width + wheel_thickness)/2}" />
    <xacro:property name="wheel_offset_z"       value="0.02" />

    <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin" />
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
                iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
                izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin" />
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
                izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="wheel" params="name x y com wheel">
        <joint name="wheel_${name}_joint" type="continuous">
            <parent link="base_link" />
            <child link="wheel_${name}_link" />
            <xacro:if value="${com == 'left'}">
                <origin xyz="${x} ${y} 0" rpy="-${pi/2} 0 0" />
                <axis xyz="0 0 1" />
            </xacro:if>
            <xacro:if value="${com == 'right'}">
                <origin xyz="${x} ${y} 0" rpy="${pi/2} 0 0" />
                <axis xyz="0 0 -1" />
            </xacro:if>
        </joint>
        <link name="wheel_${name}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <mesh filename="package://${path}/description/model/mecanum_wheel_${wheel}.STL" scale="0.001 0.001 0.001"/>
                </geometry>
                <material name="light_grey" />
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${wheel_radius}" />
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
                <origin xyz="0 0 0" rpy="0 0 0" />
            </xacro:inertial_cylinder>
        </link>
        <joint name="wheel_${name}_shaft_joint" type="fixed">
            <parent link="base_link" />
            <child link="wheel_${name}_shaft" />
            <xacro:if value="${com == 'left'}">
                <origin rpy="${pi} 0 0" xyz="${x} ${y - 0.026} 0" />
            </xacro:if>
            <xacro:if value="${com == 'right'}">
                <origin rpy="0 0 0" xyz="${x} ${y + 0.026} 0" />
            </xacro:if>
          </joint>
          <link name="wheel_${name}_shaft">
            <visual>
              <origin rpy="0 0 0" xyz="0 0 0" />
              <geometry>
                <mesh filename="package://${path}/description/model/wheel_shaft.STL"
                  scale="0.001 0.001 0.001" />
              </geometry>
              <material name="black" />
            </visual>
            <collision>
              <origin xyz="0 0 0" />
              <geometry>
                <mesh filename="package://${path}/description/model/wheel_shaft.STL"
                  scale="0.001 0.001 0.001" />
              </geometry>
            </collision>
            <inertial>
              <origin rpy="0 0 0" xyz="0 0.01221 0" />
              <mass value="0.055" />
              <inertia ixx="0.000021370" ixy="0" ixz="0" iyy="0.000009966" iyz="0" izz="0.000021370" />
            </inertial>
          </link>
          <gazebo reference="wheel_${name}_shaft">
            <material>Gazebo/Black</material>
          </gazebo>
          <gazebo reference="wheel_${name}_link">
            <material>Gazebo/Grey</material>
            <mu1>0.0</mu1>
            <mu2>0.0</mu2>
          </gazebo>
    </xacro:macro>
    
    <xacro:macro name="lidar" params="name x y z">
        <joint name="lidar_${name}_joint" type="fixed">
            <parent link="base_link" />
            <child link="lidar_${name}" />
            <xacro:if value="${name == 'front'}">
                <origin xyz="${x} ${y} ${z}" rpy="0 0 0" />
            </xacro:if>
            <xacro:if value="${name == 'back'}">
                <origin xyz="${x} ${y} ${z}" rpy="0 0 ${pi}" />
            </xacro:if>
        </joint>
        <link name="lidar_${name}">
            <visual>
                <geometry>
                    <cylinder radius="0.05" length="0.04" />
                </geometry>
                <material name="black" />
            </visual>
            <visual>
                <origin xyz="0 0 -0.03" />
                <geometry>
                    <cylinder radius="0.01" length="0.05" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="0.05" length="0.04" />
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
                <origin xyz="0 0 0" rpy="0 0 0" />
            </xacro:inertial_cylinder>
        </link>
        <gazebo reference="lidar_${name}">
            <material>Gazebo/Black</material>
            <sensor name="laser_${name}" type="ray">
                <pose> 0 0 0 0 0 0 </pose>
                <visualize>true</visualize>
                <always_on>true</always_on>
                <update_rate>10</update_rate>
                <ray>
                    <scan>
                        <horizontal>
                            <samples>360</samples>
                            <resolution>1.0</resolution>
                            <min_angle>-${pi/2}</min_angle>
                            <max_angle>${3*pi/4}</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.1</min>
                        <max>12</max>
                        <resolution>0.01</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                <plugin name="laser_controller_${name}" filename="libgazebo_ros_laser.so">
                    <topicName>/lidar_${name}_scan</topicName>
                    <frameName>lidar_${name}</frameName>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

    <material name="light_grey">
        <color rgba="0.4 0.4 0.4 1.0" />
      </material>
   
    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1" />
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1" />
    </material>

    <material name="black">
        <color rgba="0 0 0 1" />
    </material>

    <material name="red">
        <color rgba="1 0 0 1" />
    </material>

    <!-- BASE LINK -->

    <link name="base_link"></link>
    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- BASE_FOOTPRINT LINK -->

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <link name="base_footprint"></link>
    <gazebo reference="base_footprint">
        <material>Gazebo/Orange</material>
        <gravity>true</gravity>
    </gazebo>

    <!-- CHASSIS LINK -->

    <joint name="chassis_low_joint" type="fixed">
        <parent link="base_link" />
        <child link="chassis_low" />
        <origin xyz="${-chassis_length/2} 0 ${-wheel_offset_z}" />
    </joint>
    <link name="chassis_low">
        <visual>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_low/2}" />
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height_low}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_low/2}" />
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height_low}" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height_low}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height_low/2}" rpy="0 0 0" />
        </xacro:inertial_box>
    </link>
    <gazebo reference="chassis_low">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="chassis_mid_joint" type="fixed">
        <parent link="base_link" />
        <child link="chassis_mid" />
        <origin xyz="${-chassis_length/2} 0 ${chassis_height_low - wheel_offset_z}" />
    </joint>
    <link name="chassis_mid">
        <visual>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_mid/2}" />
            <geometry>
                <box size="${chassis_length_mid} ${chassis_width} ${chassis_height_mid}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_mid/2}" />
            <geometry>
                <box size="${chassis_length_mid} ${chassis_width} ${chassis_height_mid}" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length_mid}" y="${chassis_width}" z="${chassis_height_mid}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height_mid/2}" rpy="0 0 0" />
        </xacro:inertial_box>
    </link>
    <gazebo reference="chassis_mid">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="chassis_top_joint" type="fixed">
        <parent link="base_link" />
        <child link="chassis_top" />
        <origin xyz="${-chassis_length/2} 0 ${chassis_height_low - wheel_offset_z + 0.06}" />
    </joint>
    <link name="chassis_top">
        <visual>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_top/2}" />
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height_top}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="${chassis_length/2} 0 ${chassis_height_top/2}" />
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height_top}" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height_top}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height_top/2}" rpy="0 0 0" />
        </xacro:inertial_box>
    </link>
    <gazebo reference="chassis_top">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- WHEEL ROBOT -->

    <xacro:wheel name="front_left"  x="${wheel_offset_x}"   y="${wheel_offset_y}"   com="left"  wheel="left" />
    <xacro:wheel name="front_right" x="${wheel_offset_x}"   y="${-wheel_offset_y}"  com="right" wheel="right" />
    <xacro:wheel name="back_left"   x="${-wheel_offset_x}"  y="${wheel_offset_y}"   com="left"  wheel="right" />
    <xacro:wheel name="back_right"  x="${-wheel_offset_x}"  y="${-wheel_offset_y}"  com="right" wheel="left" />

    <!-- LIDAR SENSOR -->

    <xacro:lidar name="front" x="${chassis_length/2 - 0.08}" y="${chassis_width/2 - 0.08}" z="${chassis_height_low + 0.01}"/>
    <xacro:lidar name="back" x="-${chassis_length/2 - 0.08}" y="-${chassis_width/2 - 0.08}" z="${chassis_height_low + 0.01}"/>

    <!-- IMU SENSOR -->

    <joint name="imu_joint" type="fixed">
        <parent link="chassis_low" />
        <child link="imu_link" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <link name="imu_link"></link>
    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>__default_topic__</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
            <topicName>imu</topicName>
            <bodyName>imu_link</bodyName>
            <updateRateHZ>10.0</updateRateHZ>
            <gaussianNoise>0.0</gaussianNoise>
            <xyzOffset>0 0 0</xyzOffset>
            <rpyOffset>0 0 0</rpyOffset>
            <frameName>imu_link</frameName>
            <initialOrientationAsReference>false</initialOrientationAsReference>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
        </sensor>
      </gazebo>

      <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
          <commandTopic>cmd_vel</commandTopic>
          <odometryTopic>odom</odometryTopic>
          <odometryFrame>odom</odometryFrame>
          <odometryRate>20.0</odometryRate>
          <robotBaseFrame>base_link</robotBaseFrame>
          <cmdTimeout>1000</cmdTimeout>
          <publishWheelTF>false</publishWheelTF>
        </plugin>
      </gazebo>

</robot>